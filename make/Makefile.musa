# Build rules for ROCm runner
#
# Note: at present we only support a single ROCm version (whichever is default on the build system)
# unlike CUDA where we'll build both a v11 and v12 variant.

include make/common-defs.make

ifeq ($(wildcard /opt/musa),)
	MUSA_PATH ?= /usr/local/musa
else
	MUSA_PATH ?= /opt/musa
endif
MUSA_ARCHITECTURES ?= 21;22

GPU_COMPILER=$(MUSA_PATH)/bin/mcc
GPU_C_COMPILER=$(MUSA_PATH)/bin/clang
GPU_CXX_COMPILER=$(MUSA_PATH)/bin/clang++
GPU_LIB_DIR = $(MUSA_PATH)/lib
CGO_EXTRA_LDFLAGS := -L$(GPU_LIB_DIR)

GPU_RUNNER_NAME := musa
GPU_RUNNER_GO_TAGS := musa
GPU_RUNNER_DRIVER_LIB_LINK := -lmusa
GPU_RUNNER_LIBS_SHORT := musart mublas

ifeq ($(OS),linux)
	# On linux, nvcc requires avx512 -> -mavx512f -mavx512dq -mavx512bw
	GPU_COMPILER_EXTRA_FLAGS = -x musa -mtgpu -fPIC -Wcast-qual -Wno-unused-function -Wno-array-bounds -Wextra-semi -std=c++17
	GPU_LIBS = $(sort $(wildcard $(addsuffix *.$(SHARED_EXT).*,$(addprefix $(GPU_LIB_DIR)/$(SHARED_PREFIX),$(GPU_RUNNER_LIBS_SHORT)))))
	GPU_COMPILER_CFLAGS = $(CFLAGS) -fPIC -D_GNU_SOURCE
	GPU_COMPILER_CXXFLAGS = $(CXXFLAGS) -fPIC -D_GNU_SOURCE
endif
GPU_DIST_LIB_DEPS= $(sort $(addprefix $(DIST_GPU_RUNNER_DEPS_DIR)/,$(notdir $(GPU_LIBS))))

GPU_VECTOR_FLAGS=$(if $(filter avx512,$(GPU_RUNNER_CPU_FLAGS)),avx512f avx512dq avx512bw) $(filter-out avx512,$(GPU_RUNNER_CPU_FLAGS))

GPU_RUNNER_ARCH_FLAGS := $(foreach arch,$(subst ;, ,$(MUSA_ARCHITECTURES)),--cuda-gpu-arch=mp_$(arch))
GPU_COMPILER_CUFLAGS = \
	$(GPU_COMPILER_EXTRA_FLAGS) \
	$(addprefix -m,$(GPU_VECTOR_FLAGS)) \
	-DGGML_CUDA_PEER_MAX_BATCH_SIZE=128 \
	-DGGML_SCHED_MAX_COPIES=4 \
	-DGGML_CUDA_USE_GRAPHS=1 \
	-DGGML_USE_CUDA=1 \
	-DGGML_USE_MUSA=1 \
	-DGGML_SHARED=1 \
	-DGGML_BACKEND_SHARED=1 \
	-DGGML_BUILD=1 \
	-DGGML_BACKEND_BUILD=1 \
	-DGGML_USE_LLAMAFILE \
	-DK_QUANTS_PER_ITERATION=2 \
	-DNDEBUG \
	-D_GNU_SOURCE \
	-D_XOPEN_SOURCE=600 \
	-Dggml_musa_EXPORTS \
	-I./llama/  \
	-O3

include make/gpu.make
